---
const { ...props } = Astro.props;
const { id, question, answer, linkBlock } = props;
---

<li>
  <article>
    <h5>
      <button aria-expanded="false" aria-controls={id}>
        <span>{question}</span>
        <svg
          viewBox="0 0 10 10"
          aria-hidden="true"
          stroke="#181818"
          stroke-linecap="round"
        >
          <line class="vertical-line" x1="5" y1="1" x2="5" y2="9"></line>
          <line x1="1" y1="5" x2="9" y2="5"></line>
        </svg>
      </button>
    </h5>
    <div class="outer">
      <div class="answer" id={id}>
        {answer}
      </div>
    </div>
  </article>
</li>

<style>
  article:has([aria-expanded="true"]) {
    grid-template-rows: 1fr;
    .vertical-line {
      rotate: z 90deg;
    }
  }
  .outer {
    display: grid;
    grid-template-rows: 0fr;
  }
  .outer > div {
    overflow: hidden;
  }
  article:has([aria-expanded="true"]) .outer {
    grid-template-rows: 1fr;
  }

  h3 {
    font-weight: 700;
    color: #181818;
    text-wrap: revert;
  }
  h5 {
    /* font-size: var(--fluid-12-25); */
    font-family: Helvetica, sans-serif;
    font-size: 1.5625rem;
    text-transform: uppercase;
  }
  button {
    border: none;
    text-align: start;
    background: #ffb2af;
    padding: 0;
    inline-size: 100%;
    padding-block: 1rlh;
    display: flex;
    gap: 1rem;
    justify-content: space-between;

    svg {
      inline-size: auto;
      height: 2lh;
      flex-shrink: 0;

      .vertical-line {
        transform-box: fill-box;
        transform-origin: 50% 50%;
        rotate: z 0deg;
        transition: 0.6s;
      }
    }
  }
  span {
    font-family: Helvetica, sans-serif;
    font-size: 1.5625rem;
    text-transform: uppercase;
    color: #181818;
  }

  .answer {
    /* color: #595566; */

    > * + * {
      margin-top: 1em;
    }

    :last-child {
      padding-block-end: 1rlh;
    }

    .link-block {
      display: block;
    }
  }
</style>
